const fram = require('express');
const tes = fram();
const bodyParser = require('body-parser');
const MongoClient = require('mongodb').MongoClient;
const ObjectID = require('mongodb').ObjectID;
const DBurl = "mongodb://127.0.0.1:27017/";
const DBname = "sekolah";

let dbo = null;
MongoClient.connect(DBurl,(error, db)=>{
    if(error) throw error;
    dbo = db.db(DBname);
});

tes.use(bodyParser.urlencoded({extended: false}))
//dg parameter
tes.get('/rpl', (request, response)=>{
    dbo.collection('rpl').find().toArray((err, res)=>{
        if(err) throw err;
        response.json(res);
    })
});

tes.post('/rpl', (request,response)=>{
    let namaSiswa = request.body.name;
    let kelasSiswa = request.body.kelas;
    let jurusanSiswa = request.body.jurusan;
    dbo.collection('rpl').insertOne({
        nama : namaSiswa,
        kelas : kelasSiswa,
        jurusan : jurusanSiswa
    }, (err,res)=>{
        if(!err){
        response.json(res);
        response.end("Data Berhasil Masuk");
    }
    else{
        throw err;
        }
    })
}); 

//endpoint delete, data yang diakses secra spesifik dengan menggunaka parameter
tes.delete('/rpl/:id', (request, response)=>{
    let id = request.params.id;
    let id_object = new ObjectID(id);
    dbo.collection("rpl").deleteOne({ //perintah hapus mongodb
        _id : id_object //mengambil id data untuk dihapus
    }, (err, res) => {
        if(err) throw err;
        response.end("Data Berhasil dihapus");
    })
});

//endpoint update
tes.put('/rpl/:id', (request, response)=>{
    let id = request.params.id;
    let id_object = new ObjectID(id);
    let namaSiswa = request.body.name;
    let kelasSiswa = request.body.kelas;
    let jurusanSiswa = request.body.jurusan;
    dbo.collection("rpl").updateOne({
        _id : id_object     //mengambil data yang akan diedit berdasarkan ID
    }, {$set:{              //proses update data pada database
        name : namaSiswa,
        kelas : kelasSiswa,
        jurusan : jurusanSiswa
    }},
        (err,res) => {
            if(err) throw err;
            response.end("Data Berhasil diupdate");
        })
});

tes.listen('8080');